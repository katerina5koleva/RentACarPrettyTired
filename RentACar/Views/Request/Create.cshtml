@using RentACar.Data.ViewModels
@model CreateRequestVM

@{
    ViewData["Title"] = "Create Rental Request";
}

<div class="container mt-4">
    <h2>@ViewData["Title"]</h2>

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger">@TempData["ErrorMessage"]</div>
    }

    <form id="availabilityForm" method="post" asp-action="CheckAvailability" data-ajax="true" data-ajax-update="#autoSelection" data-ajax-mode="replace">
        
        @Html.AntiForgeryToken()
        <div class="row g-3">
            <div class="col-md-6">
                <label asp-for="PickUpDate" class="form-label"></label>
                <input asp-for="PickUpDate" type="date" class="form-control"
                       min="@DateTime.Today.AddDays(1).ToString("yyyy-MM-dd")" />
                <span asp-validation-for="PickUpDate" class="text-danger"></span>
            </div>
            <div class="col-md-6">
                <label asp-for="ReturnDate" class="form-label"></label>
                <input asp-for="ReturnDate" type="date" class="form-control"
                       min="@DateTime.Today.AddDays(2).ToString("yyyy-MM-dd")" />
                <span asp-validation-for="ReturnDate" class="text-danger"></span>
            </div>
        </div>
        <button type="submit" class="btn btn-primary mt-3">
            Check Availability
            <span id="loadingSpinner" class="spinner-border spinner-border-sm d-none"></span>
        </button>
    </form>

    <div id="autoSelection">
        @if (Model.AvailableAutos != null && Model.AvailableAutos.Any())
        {
            @Html.Partial("_AutoSelectionPartial", Model)
        }
    </div>


    <!-- Final booking form -->
    <form asp-action="Create" method="post" id="bookingForm" class="@(Model.AvailableAutos?.Any() == true ? "" : "d-none") mt-4">
        @Html.AntiForgeryToken()
        <input type="hidden" asp-for="PickUpDate" id="bookingPickUpDate" name="PickUpDate" />
        <input type="hidden" asp-for="ReturnDate" id="bookingReturnDate" name="ReturnDate" />
        <input type="hidden" asp-for="AutoId" id="bookingAutoId" name="AutoId" />
        <button type="submit" class="btn btn-success" id="confirmBookingBtn">Confirm Booking</button>
    </form>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-ajax-unobtrusive/3.2.6/jquery.unobtrusive-ajax.min.js"></script>
    <partial name="_ValidationScriptsPartial" />

    <script>
        $(document).ready(function() {
            console.log("Initialization started");

            // Debug initial state
            console.log("Initial PickUp:", $('#PickUpDate').val());
            console.log("Initial Return:", $('#ReturnDate').val());

            // 1. Handle AJAX success
            $(document).ajaxSuccess(function(event, xhr, settings) {
                if (settings.url.includes("CheckAvailability")) {
                    console.log("AJAX Success - Dates:", $('#PickUpDate').val(), $('#ReturnDate').val());

                    // Update FINAL form fields
                    $('#bookingPickUpDate').val($('#PickUpDate').val());
                    $('#bookingReturnDate').val($('#ReturnDate').val());

                    console.log("Final form updated:", {
                        pickUp: $('#bookingPickUpDate').val(),
                        return: $('#bookingReturnDate').val()
                    });

                    if ($('#autoSelection .card').length > 0) {
                        $('#bookingForm').removeClass('d-none');
                    }
                }
            });

            // 2. Handle vehicle selection
            window.selectAuto = function(autoId) {
                console.log("Vehicle selected:", autoId);
                $('#bookingAutoId').val(autoId);

                // Visual feedback
                $('.card').removeClass('border-primary border-3');
                $(`.card[data-auto-id="${autoId}"]`).addClass('border-primary border-3');

                console.log("Current form state:", {
                    autoId: $('#bookingAutoId').val(),
                    pickUp: $('#bookingPickUpDate').val(),
                    return: $('#bookingReturnDate').val()
                });
            };

            // 3. Prevent form submission if not ready
            $('#bookingForm').on('submit', function(e) {
                console.log("Form submission attempted");

                if (!$('#bookingAutoId').val()) {
                    alert("Please select a vehicle first");
                    e.preventDefault();
                    return;
                }

                if (!$('#bookingPickUpDate').val() || !$('#bookingReturnDate').val()) {
                    alert("Please check availability first");
                    e.preventDefault();
                    return;
                }

                console.log("Form submitting with:", {
                    AutoId: $('#bookingAutoId').val(),
                    PickUpDate: $('#bookingPickUpDate').val(),
                    ReturnDate: $('#bookingReturnDate').val()
                });
            });

            // 4. Date validation
            $('#PickUpDate, #ReturnDate').change(function() {
                const pickUp = new Date($('#PickUpDate').val());
                const ret = new Date($('#ReturnDate').val());

                if (pickUp >= ret) {
                    $('#autoSelection').html(
                        '<div class="alert alert-warning">Return date must be after pick-up date</div>'
                    );
                    $('#bookingForm').addClass('d-none');
                }
            });
        });
    </script>
}